<?xml version="1.0"?>
<project name="undeploy" xmlns:sf="antlib:com.salesforce">

 <!--
 * Copyright (c) 2012, FinancialForce.com, inc
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * - Neither the name of the FinancialForce.com, inc nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
 * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<target name="undeploy">

 <delete dir="stage" /> 
 <mkdir dir="stage" /> 
 <mkdir dir="stage/deploy" /> 
 <mkdir dir="stage/deploy/layouts" /> 


 <antcall target="generatePackageAll"/>
 <sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.server}" retrieveTarget="stage" unpackaged="stage/package.xml" maxPoll="2000" pollWaitMillis="5000"/>


 <antcall target="removeCustomItemsFromPageLayouts"/>
 <antcall target="generatePackageLayout"/>
 <sf:deploy username="${sf.username}" password="${sf.password}" serverurl="${sf.server}" deployRoot="stage/deploy" singlePackage="true" runAllTests="false" rollbackOnError="false" allowMissingFiles="true" maxPoll="2000" pollWaitMillis="5000"/>


 <delete dir="stage/deploy" /> 
 <mkdir dir="stage/deploy" /> 


 <antcall target="generateDestructiveChanges"/>
 
 <sf:deploy purgeOnDelete="true" ignoreWarnings="true" username="${sf.username}" password="${sf.password}" serverurl="${sf.server}" deployRoot="stage/deploy" singlePackage="true" runAllTests="false" rollbackOnError="false" allowMissingFiles="true" maxPoll="2000" pollWaitMillis="5000"/>

 <delete dir="stage" /> 
 
</target>

<target name="clearPackage">
  <delete file="deploy.zip" failonerror="false"/>
</target>
   
<target name="makePackage" description="Deploys code local src dir to salesforce org specified in build.properties!" depends="clearPackage">
  <zip destfile="deploy.zip" update="true">
    <fileset dir="src" includes="package.xml"/>
    <fileset dir="src" includes="applications/*.app"/>
    <fileset dir="src" includes="classes/*.cls,classes/*-meta.xml"/>
    <fileset dir="src" includes="components/*.component,components/*-meta.xml"/>
    <fileset dir="src" includes="documents/" excludes=".svn/" />
    <fileset dir="src" includes="homePageComponents/" excludes=".svn/" />
    <fileset dir="src" includes="labels/CustomLabels.labels"/>
    <fileset dir="src" includes="layouts/*.layout"/>
    <fileset dir="src" includes="objects/*.object"/>
    <fileset dir="src" includes="pages/*.page,pages/*-meta.xml"/>
    <fileset dir="src" includes="profiles/"/>
    <fileset dir="src" includes="remoteSiteSettings/"/>
    <fileset dir="src" includes="staticresources/*.resource,staticresources/*-meta.xml"/>
    <fileset dir="src" includes="tabs/*.tab"/>
    <fileset dir="src" includes="triggers/*.trigger,triggers/*-meta.xml"/>
    <fileset dir="src" includes="weblinks/"/>
  </zip>
</target>



<target name="generatePackageLayout">
<echo file="stage/deploy/package.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<Package xmlns="http://soap.sforce.com/2006/04/metadata">
  <types>
    <members>*</members>
    <name>Layout</name>
  </types>
  <version>24.0</version>
</Package>]]></echo>
</target>


<target name="generatePackageAll">
<echo file="stage/package.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<Package xmlns="http://soap.sforce.com/2006/04/metadata">
  <types>
    <members>*</members>
    <name>CustomApplication</name>
  </types>
  <types>
    <members>*</members>
    <name>ApexClass</name>
  </types>
  <types>
    <members>*</members>
    <name>ApexComponent</name>
  </types>
  <types>
    <members>*</members>
    <name>Document</name>
  </types>
  <types>
    <members>*</members>
    <name>HomePageComponent</name>
  </types>
    <types>
        <members>Ticketing_Dashboards</members>
        <members>Ticketing_Dashboards/PatronTicket_Detailed_Dashboard</members>
        <name>Dashboard</name>
    </types>
    <types>
        <members>PatronTicketEmailTemplates</members>
        <members>PatronTicketEmailTemplates/OrderConfirmationTemplate</members>
        <members>PatronTicketEmailTemplates/PartialPaymentInvoiceTemplate</members>
        <members>PatronTicketEmailTemplates/PartialPaymentReceiptTemplate</members>
        <members>PatronTicketEmailTemplates/Patron_Ticket_Patron_Portal_New_User_Login_Information</members>
        <members>PatronTicketEmailTemplates/Patron_Ticket_Patron_Portal_New_Username</members>
        <members>PatronTicketEmailTemplates/Patron_Ticket_Patron_Portal_Reset_Password</members>
        <members>PatronTicketEmailTemplates/PrintableTicketTemplate</members>
        <members>PatronTicketEmailTemplates/ScheduledDailySalesReport</members>
        <members>PatronTicketEmailTemplates/ScheduledEventSummaryReport</members>
        <members>PatronTicketEmailTemplates/ScheduledPerformanceReport</members>
        <members>PatronTicketEmailTemplates/ScheduledSalesSummaryReport</members>
        <members>PatronTicketEmailTemplates/ScheduledSubscriptionByShow</members>
        <members>PatronTicketEmailTemplates/SubscriptionOrderConfirmationTemplate</members>
        <members>PatronTicketEmailTemplates/SubscriptionRenewalTemplate</members>
        <name>EmailTemplate</name>
    </types>
  <types>
    <members>*</members>
    <name>PermissionSet</name>
  </types>
  <types>
    <members>*</members>
    <name>RemoteSiteSetting</name>
  </types>
    <types>
        <members>PatronTicket_Reports_3_0</members>
        <members>PatronTicket_Reports_3_0/All_Orders_By_Instance_no_Reservations</members>
        <members>PatronTicket_Reports_3_0/All_Orders_By_Instance_w_Reservations</members>
        <members>PatronTicket_Reports_3_0/DB_All_Orders_by_Event_first_3_0</members>
        <members>PatronTicket_Reports_3_0/DB_All_Orders_by_Month_90_days</members>
        <members>PatronTicket_Reports_3_0/DB_All_Orders_by_Month_Sold_1st_3_0</members>
        <members>PatronTicket_Reports_3_0/DB_All_Orders_by_Month_Sold_qty_3_0</members>
        <members>PatronTicket_Reports_3_0/DB_All_Orders_by_Month_qty_90_days</members>
        <members>PatronTicket_Reports_3_0/Door_List_Template_3_0</members>
        <members>PatronTicket_Reports_3_0/Main_Discount_Report_3_0</members>
        <members>PatronTicket_Reports_3_0/Main_Inventory_Report_3_0</members>
        <members>PatronTicket_Reports_3_0/Reservations_By_Instance</members>
        <members>PatronTicket_Reports_3_0/Sales_Report_including_Subscriptions_3_0</members>
        <members>PatronTicket_Reports_3_0/Subscription_Fulfillment_Report_3_0</members>
        <members>PatronTicket_Reports_3_0/Subscription_Orders_Awaiting_Fulfillment</members>
        <members>PatronTicket_Reports_3_0/Ticket_Price_Levels_by_Event_Instance</members>
        <members>PatronTicket_Reports_3_0/Who_s_Sitting_in_What_Seat</members>
        <members>Reconciliation_Reports</members>
        <members>Reconciliation_Reports/Reconciliation_Report</members>
        <members>Reconciliation_Reports/Reconciliation_Report_by_show</members>
        <name>Report</name>
    </types>
  <types>
    <members>*</members>
    <name>ReportType</name>
  </types>
  <types>
    <members>*</members>
    <name>Workflow</name>
  </types>
  <types>
    <members>*</members>
    <name>HomePageLayout</name>
  </types>
  <types>
    <members>*</members>
    <name>CustomLabels</name>
  </types>
  <types>
    <members>*</members>
    <name>Layout</name>
  </types>
  <types>
    <members>*</members>
    <name>CustomObject</name>
  </types>
  <types>
    <members>Account</members>
    <members>Activity</members>
    <members>Asset</members>
    <members>Campaign</members>
    <members>Case</members>
    <members>Contact</members>
    <members>Contract</members>
    <members>Event</members>
    <members>Idea</members>
    <members>Lead</members>
    <members>Opportunity</members>
    <members>OpportunityLineItem</members>
    <members>Product2</members>
    <members>Solution</members>
    <members>Task</members>
    <members>User</members>
    <name>CustomObject</name>
  </types>
  <types>
    <members>*</members>
    <name>ApexPage</name>
  </types>
  <types>
    <members>*</members>
    <name>Profile</name>
  </types>
  <types>
    <members>*</members>
    <name>StaticResource</name>
  </types>
  <types>
    <members>*</members>
    <name>CustomTab</name>
  </types>
  <types>
    <members>*</members>
    <name>ApexTrigger</name>
  </types>
  <types>
    <members>*</members>
    <name>CustomPageWebLink</name>
  </types>
  <version>24.0</version>
</Package>]]></echo>
</target>



<target name="generateDestructiveChanges">

<echo file="stage/deploy/package.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<Package xmlns="http://soap.sforce.com/2006/04/metadata">
  <version>24.0</version>
</Package>]]></echo>

<echo file="stage/deploy/destructiveChanges.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<Package xmlns="http://soap.sforce.com/2006/04/metadata">
]]></echo>

  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="CustomApplication" />
    <param name="objext"  value="app" />
    <param name="objdir"  value="applications" />
    <param name="objflt"  value="PS_Enterprise*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="ApexClass" />
    <param name="objext"  value="cls" />
    <param name="objdir"  value="classes" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="ApexComponent" />
    <param name="objext"  value="component" />
    <param name="objdir"  value="components" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="HomePageComponent" />
    <param name="objext"  value="homePageComponent" />
    <param name="objdir"  value="homePageComponents" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="HomePageLayout" />
    <param name="objext"  value="homePageLayout" />
    <param name="objdir"  value="homePageLayouts" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="GeneratePackageMembersLabels"/>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="CustomObject" />
    <param name="objext"  value="object" />
    <param name="objdir"  value="objects" />
    <param name="objflt"  value="*__c" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="ApexPage" />
    <param name="objext"  value="page" />
    <param name="objdir"  value="pages" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="CustomTab" />
    <param name="objext"  value="tab" />
    <param name="objdir"  value="tabs" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="ApexTrigger" />
    <param name="objext"  value="trigger" />
    <param name="objdir"  value="triggers" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="Profile" />
    <param name="objext"  value="profile" />
    <param name="objdir"  value="profiles" />
    <param name="objflt"  value="PSE-*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="CustomPageWebLink" />
    <param name="objext"  value="weblink" />
    <param name="objdir"  value="weblinks" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="Dashboard" />
    <param name="objext"  value="dashboard" />
    <param name="objdir"  value="dashboards" />
    <param name="objflt"  value="**/*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="EmailTemplate" />
    <param name="objext"  value="email" />
    <param name="objdir"  value="email" />
    <param name="objflt"  value="**/*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="PermissionSet" />
    <param name="objext"  value="permissionset" />
    <param name="objdir"  value="permissionsets" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="RemoteSiteSetting" />
    <param name="objext"  value="remoteSite" />
    <param name="objdir"  value="remoteSiteSettings" />
    <param name="objflt"  value="*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="Report" />
    <param name="objext"  value="report" />
    <param name="objdir"  value="reports" />
    <param name="objflt"  value="**/*" />
  </antcall>
  <antcall target="generatePackageMembers">
    <param name="objtyp"  value="ReportType" />
    <param name="objext"  value="reportType" />
    <param name="objdir"  value="reportTypes" />
    <param name="objflt"  value="*" />
  </antcall>


  <antcall target="GeneratePackageMembersStdObjCustomElements"/>

<echo file="stage/deploy/destructiveChanges.xml" append="true"><![CDATA[  <version>24.0</version>
</Package>]]></echo>

</target>


<target name="generatePackageMembers">

<script language="javascript"> 
<![CDATA[
   importPackage(java.io);	

 try
 { 
   var objtyp = project.getProperty('objtyp');
   var objext = project.getProperty('objext');
   var objdir = project.getProperty('objdir');
   var objflt = project.getProperty('objflt');

   var msg = '';
   msg+='<types>\n';

   fs = project.createDataType("fileset");
   fs.setDir( new File("./stage/" + objdir  +"/") );
   fs.setIncludes(objflt + "." + objext);
   fs.setExcludes(".svn, SitePoweredBy.component, StdExceptionTemplate.page, InMaintenance.page, FileNotFound.page, Exception.page, BandwidthExceeded.page, Stub.page");
   var basedir  = fs.getDir(project);

   ds = fs.getDirectoryScanner(project);
   var srcFiles = ds.getIncludedFiles();
   for (i=0; i<srcFiles.length; i++) 
   {
       var filename = srcFiles[i];
       filename = filename.substring(0,filename.indexOf("." + objext)); 
       filename = filename.replace("\\","/");      
       msg+='<members>' + filename + '</members>\n';
   }
   msg+='<name>' + objtyp + '</name>\n';
   msg+='</types>\n';

   var file = new File('./stage/deploy/', 'destructiveChanges.xml');
   echo = project.createTask("echo");
   echo.setMessage(msg);
   echo.setAppend(true);
   echo.setFile(file);
   echo.perform();
  }
  catch(e){
   //echo = project.createTask("echo");
   //echo.setMessage(e.message);
   //echo.perform();
} //Do nothing because folder might not exist, no issue

]]>
</script>
</target>


<target name="removeCustomItemsFromPageLayouts">
   <script language="javascript"> 
 <![CDATA[

      importPackage(java.io);
      fs = project.createDataType("fileset");
      fs.setDir( new File("./stage/layouts/") );
      fs.setIncludes("*.layout");
      fs.setExcludes(".svn, Social*");
      var basedir  = fs.getDir(project);

      ds = fs.getDirectoryScanner(project);
      var srcFiles = ds.getIncludedFiles();

      for (i=0; i<srcFiles.length; i++) 
      {

       
        var filename = srcFiles[i];
        var file = new File(basedir, filename);
        var br = new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(file))));
	
	var bBlock      = false;
        var line        = '';
        var bFilterMode = false;
        var bSkipBlock  = false;
        var bLine       = true;
        var storage     = '';
        var BlockType   = '';
        var BlockID     = '';
	var strEcho     = '';
        while ((line = br.readLine()) != null)   
        {
    
          if (line.indexOf('<customButtons>') > -1){bLine=false;}

          if (line.indexOf('<layoutItems>') > -1) {bBlock=false;BlockType='</layoutItems>';BlockID='<field>';bSkipBlock = false;}
          if (line.indexOf('<relatedLists>') > -1){bBlock=false;BlockType='</relatedLists>';BlockID='<relatedList>';bSkipBlock = false;}

          if (line.indexOf('<miniLayout>') > -1){bFilterMode=true;}
          if (line.indexOf('</miniLayout>') > -1){bFilterMode=false;}

          if (bFilterMode == true)
          {
            if (line.indexOf('<fields>') > -1)
            {
              if (line.indexOf('__c') > -1)
                {if (line.indexOf('__') == line.indexOf('__c')){bLine=false;}} 
            }
          }
	

          if (bBlock == false)
          {
	     storage+=line+'\n';

     	     if (line.indexOf('<page>'      ) > -1){bSkipBlock=true;} //remove all embedded pages
             if (line.indexOf('<customLink>') > -1){bSkipBlock=true;} //remove all custom links


             if (line.indexOf(BlockID) > -1)
             {
               if (line.indexOf('__c') > -1)
               {
                  if (line.indexOf('__') == line.lastIndexOf('__c') || //if not then its got a name space, dont strip it eg. namespace__field__c
                      line.indexOf('__') == line.indexOf('__c.') )     //if not this its a related list with object__c.field__c
                    {bSkipBlock=true;}
               } 
             }


             if (line.indexOf(BlockType) > -1)
             {
	       if ( bSkipBlock == false ){strEcho+=storage+'\n';}
               storage='';
               bBlock = true;
               bLine = false;
             }
          }


          if (bBlock && bLine){strEcho+=line+'\n';}
          bLine = true;


        }
        var file2 = new File('./stage/deploy/layouts/', filename);
        echo = project.createTask("echo");
        echo.setMessage(strEcho);
        echo.setFile(file2);
        echo.perform();
        strEcho='';
      }


  ]]></script>
</target>


<target name="GeneratePackageMembersStdObjCustomElements">
<script language="javascript"> 
<![CDATA[
  try
  {

      importPackage(java.io);
      fs = project.createDataType("fileset");
      fs.setDir( new File("./stage/objects/") );
      fs.setIncludes("*.object");
      fs.setExcludes("*__c.object");
      var basedir  = fs.getDir(project);

      ds = fs.getDirectoryScanner(project);
      var srcFiles = ds.getIncludedFiles();

      var strEchoFld     = '';
      var strEchoWeblink = '';

      strEchoFld+='<types>\n';
      strEchoWeblink+='<types>\n';
      for (i=0; i<srcFiles.length; i++) 
      {
        var filename = srcFiles[i];
        var file = new File(basedir, filename);
        var bFld     = false;
        var bWeblink = false;
        var br       = new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(file))));
        while ((line = br.readLine()) != null)   
        {

          if (line.indexOf('<fields>' ) > -1){bFld=true ;}
          if (line.indexOf('</fields>') > -1){bFld=false;}
          if (bFld==true)
          {
            if (line.indexOf('<fullName>') > -1)
            {
             value = line.substring(line.indexOf('<fullName>') + 10,line.indexOf('</fullName>'));
             if (value.indexOf('__c') > -1)
             {
                 if (value.indexOf('__') == value.lastIndexOf('__c'))
                   {strEchoFld+= '<members>' + filename.substring(0,filename.length()-7) + '.' + value + '</members>\n';}
             }
             bFld=false;
            }
          }

          if (line.indexOf('<webLinks>' ) > -1){bWeblink=true ;}
          if (line.indexOf('</webLinks>') > -1){bWeblink=false;}
          if (bWeblink==true)
          {
            if (line.indexOf('<fullName>') > -1)
            {
             value = line.substring(line.indexOf('<fullName>') + 10,line.indexOf('</fullName>'));
             if( value.indexOf('__') == -1) //Don't include managed package weblinks
             {
               strEchoWeblink+= '<members>' + filename.substring(0,filename.length()-7) + '.' + value + '</members>\n';
             }
             bWeblink=false;
            }
          }


        }
       }  

       strEchoFld += '<members>PatronTrx__PaymentTransaction__c.TicketOrder__c</members>\n';
       strEchoFld += '<members>PatronTrx__PaymentTransactionItem__c.TicketOrderItem__c</members>\n';
       strEchoFld+='<name>CustomField</name>\n';
       strEchoFld+='</types>\n';
       strEchoWeblink+='<name>WebLink</name>\n';
       strEchoWeblink+='</types>\n';

       var file2 = new File('./stage/deploy/', 'destructiveChanges.xml');
       echo = project.createTask("echo");
       echo.setMessage(strEchoFld+strEchoWeblink);
       echo.setFile(file2);
       echo.setAppend(true);
       echo.perform();
       strEcho='';
   } 
   catch(e){} //Do nothing, in case folder does not exist

]]>
</script>
</target>


<target name="GeneratePackageMembersLabels">
<script language="javascript"> 
<![CDATA[
  try
  {

      importPackage(java.io);
      fs = project.createDataType("fileset");
      fs.setDir( new File("./stage/labels/") );
      fs.setIncludes("CustomLabels.labels");
      fs.setExcludes(".svn");
      var basedir  = fs.getDir(project);

      ds = fs.getDirectoryScanner(project);
      var srcFiles = ds.getIncludedFiles();

      var strEcho  = '';
      strEcho+='<types>\n';
      for (i=0; i<srcFiles.length; i++) 
      {
        var filename = srcFiles[i];
        var file = new File(basedir, filename);
        var b        = false;
        var br       = new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(file))));
        while ((line = br.readLine()) != null)   
        {
          if (line.indexOf('<labels>' ) > -1){b=true ;}
          if (line.indexOf('</labels>') > -1){b=false;}
          if (b==true)
          {
            if (line.indexOf('<fullName>') > -1)
            {
              strEcho+='<members>'+ line.substring(line.indexOf('<fullName>') + 10,line.indexOf('</fullName>')) + '</members>\n';
              b=false;
            }
          }
        }
       }  

       strEcho+='<name>CustomLabel</name>\n';
       strEcho+='</types>\n';
       var file2 = new File('./stage/deploy/', 'destructiveChanges.xml');
       echo = project.createTask("echo");
       echo.setMessage(strEcho);
       echo.setFile(file2);
       echo.setAppend(true);
       echo.perform();
       strEcho='';
   } 
   catch(e){}

]]>
</script>
</target>

</project>
